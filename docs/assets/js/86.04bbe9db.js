(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{309:function(e,t,r){"use strict";r.r(t);var a=r(5),s=Object(a.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"node-简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#node-简介","aria-hidden":"true"}},[e._v("#")]),e._v(" Node 简介")]),e._v(" "),r("p",[e._v("简单的说 Node.js 就是运行在服务端的 JavaScript。\nNode.js 是一个基于 Chrome JavaScript 运行时建立的一个平台，用于方便地搭建响应速度快、易于扩展的网络应用。\nNode.js 是一个事件驱动 I/O 服务端 JavaScript 环境，基于 Google 的 V8 引擎，V8 引擎执行 JavaScript 的速度非常快，性能非常好，非常适合在分布式设备上运行数据密集型的实时应用。")]),e._v(" "),r("h2",{attrs:{id:"创建-node-js-的-http-服务器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#创建-node-js-的-http-服务器","aria-hidden":"true"}},[e._v("#")]),e._v(" 创建 Node.js 的 HTTP 服务器")]),e._v(" "),r("p",[e._v('第一行请求（require）Node.js 自带的 http 模块，并且把它赋值给 http 变量。\n接下来我们调用 http 模块提供的函数 createServer：传入函数通过 request, response 参数来接收和响应数据；返回一个对象，这个对象有一个叫做 listen 的方法，这个方法有一个数值参数，指定这个 HTTP 服务器监听的端口号。\nNode.js 也是单线程的 Event Loop，但是它的运行机制不同于浏览器环境。\n有关方法：process.nextTick()指定的回调函数是在当前"执行栈"的尾部触发，而 setImmediate()指定的是在下次"事件循环"触发，这与 setTimeout(fn, 0)很像。所以很显然，前者总是比后者发生得早，而且执行效率也高（因为不用检查"任务队列"）。')]),e._v(" "),r("h2",{attrs:{id:"全局对象"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#全局对象","aria-hidden":"true"}},[e._v("#")]),e._v(" 全局对象")]),e._v(" "),r("ul",[r("li",[e._v("process")]),e._v(" "),r("li",[e._v("Buffer")]),e._v(" "),r("li",[e._v("Timers：setTimeout，setImmediate，setInterval")])]),e._v(" "),r("h2",{attrs:{id:"优秀文章"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#优秀文章","aria-hidden":"true"}},[e._v("#")]),e._v(" 优秀文章")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://cnodejs.org/topic/58eee565a92d341e48cfe7fc",target:"_blank",rel:"noopener noreferrer"}},[e._v("2017，我们来聊聊 Node.js"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://cnodejs.org/topic/59c75a3dd7cbefc511964688",target:"_blank",rel:"noopener noreferrer"}},[e._v("迷茫时学习Node.js最好的方法"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://cnodejs.org/topic/5a328967d92f2f5b185ace96",target:"_blank",rel:"noopener noreferrer"}},[e._v("狼叔回复的《Node相比传统服务端技术栈好在哪里？》"),r("OutboundLink")],1)])])])},[],!1,null,null,null);t.default=s.exports}}]);