(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{381:function(v,_,a){"use strict";a.r(_);var t=a(5),i=Object(t.a)({},function(){var v=this,_=v.$createElement,a=v._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h1",{attrs:{id:"javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript","aria-hidden":"true"}},[v._v("#")]),v._v(" JavaScript")]),v._v(" "),a("h2",{attrs:{id:"严格模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#严格模式","aria-hidden":"true"}},[v._v("#")]),v._v(" 严格模式")]),v._v(" "),a("p",[a("code",[v._v("use strict;")]),v._v(" 将使 JS 代码以严格模式（strict mode）运行。")]),v._v(" "),a("p",[v._v('设立 "严格模式" 的目的，主要有以下几个：')]),v._v(" "),a("ul",[a("li",[v._v("消除 Javascript 语法的一些不合理、不严谨之处，减少一些怪异行为")]),v._v(" "),a("li",[v._v("消除代码运行的一些不安全之处，保证代码运行的安全")]),v._v(" "),a("li",[v._v("提高编译器效率，增加运行速度")]),v._v(" "),a("li",[v._v("为未来新版本的 Javascript 做好铺垫")])]),v._v(" "),a("p",[v._v('"严格模式" 体现了 Javascript 更合理、更安全、更严谨的发展方向，包括 IE 10 在内的主流浏览器，都已经支持它，许多大项目已经开始全面拥抱它。')]),v._v(" "),a("p",[v._v('另一方面，同样的代码，在 "严格模式" 中，可能会有不一样的运行结果。一些在 "正常模式" 下可以运行的语句，在 "严格模式" 下将不能运行。')]),v._v(" "),a("ul",[a("li",[v._v("全局变量显式声明：在正常模式中，如果一个变量没有声明就赋值，默认是全局变量。严格模式禁止这种用法，全局变量必须显式声明。")]),v._v(" "),a("li",[v._v("静态绑定：禁止使用 with 语句；创设 eval 作用域。")]),v._v(" "),a("li",[v._v("禁止 this 关键字指向全局对象，而是报错。")]),v._v(" "),a("li",[v._v("严格模式要求函数的参数名唯一，否则报错。")]),v._v(" "),a("li",[v._v("无法删除变量：只有 configurable 为 true 的对象属性，才能被删除。")]),v._v(" "),a("li",[v._v("禁止八进制数表示法：整数第一位为 0，将报错。")]),v._v(" "),a("li",[v._v("不允许对 arguments 赋值；arguments 不再追踪参数的变化。")]),v._v(" "),a("li",[v._v("通过 this 传递给一个函数的值不会被强制转换为一个对象；非严格模式下，则指定为 null 或 undefined 时会自动指向全局对象（使用 call, apply 或 bind 方法），同时为原始值（数字，字符串，布尔值）的 this 会指向其自动包装对象。")]),v._v(" "),a("li",[v._v("新增了一些保留字：implements, interface, let, package, private, protected, public, static 等。")])]),v._v(" "),a("h2",{attrs:{id:"javascript-延迟加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-延迟加载","aria-hidden":"true"}},[v._v("#")]),v._v(" JavaScript 延迟加载")]),v._v(" "),a("p",[v._v("有些 JS 代码并非页面初始化的时候就立刻需要的，而是稍后某些情况才需要的。")]),v._v(" "),a("ul",[a("li",[v._v("异步加载的方案：动态插入 script 标签")]),v._v(" "),a("li",[v._v("通过 ajax 获取代码，然后通过 "),a("code",[v._v("eval")]),v._v(" 执行（不推荐，不安全，非常耗性能）")]),v._v(" "),a("li",[v._v("script 标签上添加 defer 或 async 属性")]),v._v(" "),a("li",[v._v("创建并插入 iframe，让它异步执行 JS")])]),v._v(" "),a("h2",{attrs:{id:"for-in-和-for-of"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-in-和-for-of","aria-hidden":"true"}},[v._v("#")]),v._v(" for...in 和 for...of")]),v._v(" "),a("ol",[a("li",[v._v("推荐在循环对象属性的时候，使用"),a("code",[v._v("for...in")]),v._v("，在遍历数组的时候的时候使用"),a("code",[v._v("for...of")]),v._v("。")]),v._v(" "),a("li",[a("code",[v._v("for...in")]),v._v("循环出的是 key，"),a("code",[v._v("for...of")]),v._v("循环出的是 value")]),v._v(" "),a("li",[v._v("注意，"),a("code",[v._v("for...of")]),v._v("是 ES6 新引入的特性。修复了 ES5 引入的"),a("code",[v._v("for...in")]),v._v("的不足。")]),v._v(" "),a("li",[a("code",[v._v("for...of")]),v._v(" 不能循环普通的对象（报错），需要通过和"),a("code",[v._v("Object.keys()")]),v._v("搭配使用。")])])])},[],!1,null,null,null);_.default=i.exports}}]);