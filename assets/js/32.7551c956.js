(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{274:function(t,s,a){"use strict";a.r(s);var e=a(0),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"vuepress"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vuepress"}},[t._v("#")]),t._v(" VuePress")]),t._v(" "),a("p",[t._v("简单来说，"),a("a",{attrs:{href:"https://vuepress.vuejs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("VuePress"),a("OutboundLink")],1),t._v(" 是 Vue 驱动的静态网站生成器。VuePress 简单易上手，同时也有足够强大的定制能力，尤其对熟悉 Vue 的前端开发人员而言。相比于知名的博客生成器 Hexo 来说，VuePress 最大优势就是 Vue 带来的灵活性。")]),t._v(" "),a("p",[t._v("在 VuePress 0.x 时，VuePress 还只能算是个生成文档的不错的工具，主题样式比较固定，功能也不是足够强大。随后，VuePress 1.x 版本的引入了主题和插件，让 VuePress 真正进化成一个利器。我们可以定制、发表、使用主题与插件，强大的 Vue 框架也使得主题与插件的开发更加容易。")]),t._v(" "),a("p",[t._v("本文就聊一聊基于 "),a("strong",[t._v("VuePress 1.x")]),t._v(" 的博客主题定制。先看个效果图")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://xpic.devtoken.club/blog/vuepress-demo-2019-5-21.png",alt:"vuepress-demo-2019-5-21.png"}}),t._v(" "),a("img",{attrs:{src:"https://xpic.devtoken.club/blog/vuepress-blog-2019-5-22.png",alt:"vuepress-blog-2019-5-22.png"}})]),t._v(" "),a("p",[t._v("本项目根据 https://github.com/bencodezen/bencodezen 进行改造。")]),t._v(" "),a("h2",{attrs:{id:"vuepress-预置知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vuepress-预置知识"}},[t._v("#")]),t._v(" VuePress 预置知识")]),t._v(" "),a("p",[t._v("这里只提几个比较重要的点，其他的关于 VuePress 的使用，配置需要同学自己现行了解，官网传送门 👉 "),a("a",{attrs:{href:"https://v1.vuepress.vuejs.org/zh/guide/",target:"_blank",rel:"noopener noreferrer"}},[t._v("指南"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"front-master"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#front-master"}},[t._v("#")]),t._v(" Front Master")]),t._v(" "),a("p",[t._v("同 Hexo 类似，VuePress 也会使用 front matter 标识 Markdown 文本的信息，VuePress 支持 YAML，JSON 或者 TOML 格式的 front matter。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("---\ntitle: Blogging Like a Hacker\nlang: en-US\n---\n")])])]),a("p",[t._v("在这些三条虚线之间，可以设置预定义变量，创建自己的自定义变量。 然后，可以使用 "),a("code",[t._v("$frontmatter")]),t._v(" 在页面的其余部分、以及所有的自定义组件、主题组件中访问这些变量。")]),t._v(" "),a("h3",{attrs:{id:"在-markdown-中使用组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在-markdown-中使用组件"}},[t._v("#")]),t._v(" 在 Markdown 中使用组件")]),t._v(" "),a("p",[t._v("所有在 "),a("code",[t._v(".vuepress/components")]),t._v(" 中的 "),a("code",[t._v("*.vue")]),t._v(" 文件将会自动地被注册为全局的异步组件，我们可以直接在 Markdown 文件中使用这些组件。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".\n└─ .vuepress\n   └─ components\n      ├─ demo-1.vue\n      ├─ OtherComponent.vue\n      └─ Foo\n         └─ Bar.vue\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<demo-1/>\n<OtherComponent/>\n<Foo-Bar/>\n")])])]),a("h2",{attrs:{id:"主题开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主题开发"}},[t._v("#")]),t._v(" 主题开发")]),t._v(" "),a("p",[t._v("开发 VuePress 主题是很简单的，我们只需要创建一个 "),a("code",[t._v(".vuepress/theme")]),t._v(" 目录，并创建一个 "),a("code",[t._v("Layout.vue")]),t._v(" 文件，然后就可以像开发 Vue 应用一样自定义我们的主题了。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".\n└─ .vuepress\n └─ theme\n     └─ Layout.vue\n")])])]),a("p",[a("code",[t._v("Layout.vue")]),t._v(" 文件可以看做是 Vue 项目的入口，我们需要在 "),a("code",[t._v("Layout.vue")]),t._v(" 文件中完成页面布局，引入其他组件，实现 JS 逻辑等。VuePress 会将网站的元数据注入到所有组件中，如网站的 config，当前页面的 front matter 信息等，我们可以直接在组件中使用。")]),t._v(" "),a("h3",{attrs:{id:"获取-markdown-内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取-markdown-内容"}},[t._v("#")]),t._v(" 获取 Markdown 内容")]),t._v(" "),a("blockquote",[a("p",[t._v("VuePress 实现了一套针对 Markdown 的内容分发 API。通过这个特性，你可以将你的文档分割成多个片段，以便于在布局组件中灵活组合。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://xpic.devtoken.club/blog/markdown-layout-2019-5-22.png",alt:"markdown-layout-2019-5-22.png"}})]),t._v(" "),a("p",[t._v("简单来说，VuePress 会将 Markdown 内容填充到 "),a("code",[t._v("<Content />")]),t._v(" 组件所在的位置。")]),t._v(" "),a("h3",{attrs:{id:"页面布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#页面布局"}},[t._v("#")]),t._v(" 页面布局")]),t._v(" "),a("p",[t._v("当我们了解以上内容以后，我们就可以进行的简单的主题开发了。一个最简单的主题，只需要一个 "),a("code",[t._v("<Content />")]),t._v(" 组件就 OK 了")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("theme-container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("更进一步的，默认情况下，所有的 Markdown 文件会使用同一个布局组件，我们可以通过在 "),a("code",[t._v("front matter")]),t._v(" 中指定使用的组件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("---\nlayout: AnotherLayout\n---\n")])])]),a("p",[t._v("异或是根据不同的页面显示不同的布局，我们可以在 "),a("code",[t._v("front matter")]),t._v(" 指定 Markdown 文件所属的类型，通过类型判断使用哪种布局（组件）")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Blog")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-else-if")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("$page.frontmatter.blog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Page")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("Page")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("比如这里我们为所有拥有 "),a("code",[t._v("blog")]),t._v(" 属性的 Markdown 文件使用 Blog 组件布局。")]),t._v(" "),a("h2",{attrs:{id:"博客开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#博客开发"}},[t._v("#")]),t._v(" 博客开发")]),t._v(" "),a("p",[t._v("至此，我们就可以开发我们的 VuePress 博客。首先我们需要一个列表页面展示我们的文章，其次我们需要一个文章页面展示文章的内容。")]),t._v(" "),a("p",[t._v("首先我们可以通过 "),a("code",[t._v("$site.pages")]),t._v(" 获取所有的 Markdown 页面，当然这里可能并不是所有的页面都是博客文章，所以我们可以在获取到数据后做一个过滤。我们可以开发一个简单的 Vue 组件来过滤并展示文章列表，并在 "),a("code",[t._v("src/README.md")]),t._v(" 文件中使用这个组件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('---\nhome: true\n---\n<BlogPostList :list="$site.pages" />\n')])])]),a("p",[t._v("默认情况下，VuePress 会将 "),a("code",[t._v("src/README.md")]),t._v(" 文件内容渲染为网站的首页，这里我们就可以实现将文章列表作为首页展示。")]),t._v(" "),a("p",[t._v("至于博客页面，则比较简单，我们可以给所有的 blog markdown 文件增加一个属性，使用这个属性来确定所使用的布局。")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("至此，我们简单讲了使用 VuePress 定制开发博客的一些要点，感兴趣的同学可以进一步探索，开发自己的网站或博客。")]),t._v(" "),a("h3",{attrs:{id:"附录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#附录"}},[t._v("#")]),t._v(" 附录")]),t._v(" "),a("p",[t._v("项目地址："),a("a",{attrs:{href:"https://github.com/chhpt/vuepress-blog",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);